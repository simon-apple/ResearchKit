/*
 *    Copyright (c) 2015 Apple Computer, Inc.
 *    All rights reserved.
 *
 *    This document is the property of Apple Computer, Inc. It is
 *    considered confidential and proprietary information.
 *
 *    This document may not be reproduced or transmitted in any form,
 *    in whole or in part, without the express written permission of
 *    Apple Computer, Inc.
 *
 *    Description:
 *      Supported Features Definition
 */

#ifndef FEATURES_H_
#define FEATURES_H_

typedef enum
{
    FEATURE_UNKNOWN = 0,	/* No info whether feature is supported */
    FEATURE_DISABLE,		/* Explicitly NOT supported by remote device */
    FEATURE_ENABLE          /* Supported by remote device */
} FeatureState_t;

typedef enum
{
    FEATURE_BUDSWAP = 0,
    FEATURE_INEAR,
    FEATURE_APPLE_AT,
    FEATURE_UNTETHERED,
    FEATURE_A2DP_TIMESTAMP,
    FEATURE_DSP_HOSTOFFLOAD,
    FEATURE_AVRCP_ABSVOLUME,
    FEATURE_HF_VOLCTRL,
    FEATURE_TBFC,
    FEATURE_AVDTP_SILENCE_FILL,
	FEATURE_A2DP_SCHEDULING,
    FEATURE_DISABLE_AAC_VOICE,
    FEATURE_ADVANCED_APPLE_AUDIO_DEVICE,
	FEATURE_A2DP_DYNAMIC_LATENCY,
    FEATURE_ENHANCED_DOUBLE_TAP,
    FEATURE_HEAD_DETECTION,
    FEATURE_LISTEN_MODE_ANC,
    FEATURE_LISTEN_MODE_TRANSPARENCY,
    FEATURE_EQ_SUPPORT,
	FEATURE_FASTCONNECT_ACL,
    FEATURE_SENSOR_DATA,
	FEATURE_FASTCONNECT,
	FEATURE_DOAP,
    FEATURE_CATT,
    FEATURE_SWITCH_CONTROL,
    FEATURE_LIVE_LISTEN,
	FEATURE_SOFTWARE_VOLUME,
    FEATURE_WIRELESS_SPLITTER,
#if !RC_HIDE_B298
    FEATURE_SINGLE_CLICK,
    FEATURE_DOUBLE_CLICK,
    FEATURE_CLICK_HOLD
#endif
} FeatureDBEntry_t;

#define FEATURE_RESULT(Feature)         ((Feature) ? FEATURE_ENABLE : FEATURE_DISABLE)

/* Apple Supported Features Bit Masks */
//Remote Device Supports Bud-swap
#define FEATURE_BUDSWAP_GET(x)          (((x) & FEATURE_BUDSWAP_MASK) >> FEATURE_BUDSWAP_SHIFT)
#define FEATURE_BUDSWAP_MASK            (0x00000001)
#define FEATURE_BUDSWAP_SHIFT           (0)
//Remote Device Supports In-ear detection
#define FEATURE_INEAR_GET(x)            (((x) & FEATURE_INEAR_MASK) >> FEATURE_INEAR_SHIFT)
#define FEATURE_INEAR_MASK              (0x00000002)
#define FEATURE_INEAR_SHIFT             (1)
//Remote Device Supports Apple AT commands
#define FEATURE_APPLE_ATCMD_GET(x)      (((x) & FEATURE_APPLE_ATCMD_MASK) >> FEATURE_APPLE_ATCMD_SHIFT)
#define FEATURE_APPLE_ATCMD_MASK        (0x00000004)
#define FEATURE_APPLE_ATCMD_SHIFT       (2)
//Remote Device Supports Untethered connections
#define FEATURE_UNTETHERED_GET(x)       (((x) & FEATURE_UNTETHERED_MASK) >> FEATURE_UNTETHERED_SHIFT)
#define FEATURE_UNTETHERED_MASK         (0x00000008)
#define FEATURE_UNTETHERED_SHIFT        (3)
//Remote Device Supports A2DP BT clock timestamping
#define FEATURE_APPLE_A2DP_TS_GET(x)    (((x) & FEATURE_APPLE_A2DP_TS_MASK) >> FEATURE_APPLE_A2DP_TS_SHIFT)
#define FEATURE_APPLE_A2DP_TS_MASK      (0x00000010)
#define FEATURE_APPLE_A2DP_TS_SHIFT     (4)
//Locally supports DSP processing, SRC should disable
#define FEATURE_LOCAL_DSP_PROC_GET(x)   (((x) & FEATURE_LOCAL_DSP_PROC_MASK) >> FEATURE_LOCAL_DSP_PROC_SHIFT)
#define FEATURE_LOCAL_DSP_PROC_MASK     (0x00000020)
#define FEATURE_LOCAL_DSP_PROC_SHIFT    (5)
//Absolute volume; SRC should not use digital gain
#define FEATURE_AVRCP_ABSVOL_GET(x)     (((x) & FEATURE_AVRCP_ABSVOL_MASK) >> FEATURE_AVRCP_ABSVOL_SHIFT)
#define FEATURE_AVRCP_ABSVOL_MASK       (0x00000040)
#define FEATURE_AVRCP_ABSVOL_SHIFT      (6)
//AG-HF supports volume control (+VGM and +VGS)
#define FEATURE_HF_ABSVOL_GET(x)        (((x) & FEATURE_HF_ABSVOL_MASK) >> FEATURE_HF_ABSVOL_SHIFT)
#define FEATURE_HF_ABSVOL_MASK          (0x00000080)
#define FEATURE_HF_ABSVOL_SHIFT         (7)
//Trigger beacon fast connect
#define FEATURE_TBFC_GET(x)             (((x) & FEATURE_TBFC_MASK) >> FEATURE_TBFC_SHIFT)
#define FEATURE_TBFC_MASK               (0x00000100)
#define FEATURE_TBFC_SHIFT              (8)
//AVDTP gaps are filled with silence
#define FEATURE_AVDTP_SILENCE_FILL_GET(x)       (((x) & FEATURE_AVDTP_SILENCE_FILL_MASK) >> FEATURE_AVDTP_SILENCE_FILL_SHIFT)
#define FEATURE_AVDTP_SILENCE_FILL_MASK         (0x00000200)
#define FEATURE_AVDTP_SILENCE_FILL_SHIFT        (9)
// A2DP Link Scheduling
#define FEATURE_A2DP_SCHEDULING_GET(x)          (((x) & FEATURE_A2DP_SCHEDULING_MASK) >> FEATURE_A2DP_SCHEDULING_SHIFT)
#define FEATURE_A2DP_SCHEDULING_MASK            (0x00000400)
#define FEATURE_A2DP_SCHEDULING_SHIFT           (10)
// Force disable AAC Voice
#define FEATURE_DISABLE_AAC_VOICE_GET(x)        (((x) & FEATURE_DISABLE_AAC_VOICE_MASK) >> FEATURE_DISABLE_AAC_VOICE_SHIFT)
#define FEATURE_DISABLE_AAC_VOICE_MASK          (0x00000800)
#define FEATURE_DISABLE_AAC_VOICE_SHIFT         (11)

// Remote Device is an Advanced Apple Audio Device
#define FEATURE_ADVANCED_APPLE_AUDIO_DEVICE_GET(x)              (((x) & FEATURE_ADVANCED_APPLE_AUDIO_DEVICE_MASK) >> FEATURE_ADVANCED_APPLE_AUDIO_DEVICE_SHIFT)
#define FEATURE_ADVANCED_APPLE_AUDIO_DEVICE_MASK                (0x00001000)
#define FEATURE_ADVANCED_APPLE_AUDIO_DEVICE_SHIFT               (12)

// Remote Device support Low Latency
#define FEATURE_A2DP_DYNAMIC_LATENCY_GET(x)              (((x) & FEATURE_A2DP_DYNAMIC_LATENCY_MASK) >> FEATURE_A2DP_DYNAMIC_LATENCY_SHIFT)
#define FEATURE_A2DP_DYNAMIC_LATENCY_MASK                (0x00002000)
#define FEATURE_A2DP_DYNAMIC_LATENCY_SHIFT               (13)

// Remote Device supports Enhanced Double Tap
#define FEATURE_ENHANCED_DOUBLE_TAP_GET(x)              (((x) & FEATURE_ENHANCED_DOUBLE_TAP_MASK) >> FEATURE_ENHANCED_DOUBLE_TAP_SHIFT)
#define FEATURE_ENHANCED_DOUBLE_TAP_MASK                                       (0x00004000)
#define FEATURE_ENHANCED_DOUBLE_TAP_SHIFT                                      (14)

// Remote Device supports Head detection
#define FEATURE_HEAD_DETECTION_SUPPORTED_GET(x)				(((x) & FEATURE_HEAD_DETECTION_SUPPORTED_MASK) >> FEATURE_HEAD_DETECTION_SUPPORTED_SHIFT)
#define FEATURE_HEAD_DETECTION_SUPPORTED_MASK					(0x00008000)
#define FEATURE_HEAD_DETECTION_SUPPORTED_SHIFT					(15)

// Remote Device supports ANC
#define FEATURE_ANC_SUPPORTED_GET(x)				(((x) & FEATURE_ANC_SUPPORTED_MASK) >> FEATURE_ANC_SUPPORTED_SHIFT)
#define FEATURE_ANC_SUPPORTED_MASK					(0x00010000)
#define FEATURE_ANC_SUPPORTED_SHIFT					(16)

// Remote Device supports Transparency
#define FEATURE_TRANSPARENCY_SUPPORTED_GET(x)		(((x) & FEATURE_TRANSPARENCY_SUPPORTED_MASK) >> FEATURE_TRANSPARENCY_SUPPORTED_SHIFT)
#define FEATURE_TRANSPARENCY_SUPPORTED_MASK			(0x00020000)
#define FEATURE_TRANSPARENCY_SUPPORTED_SHIFT		(17)

// Remote Device supports EQ
#define FEATURE_EQ_SUPPORTED_GET(x)					(((x) & FEATURE_EQ_SUPPORTED_MASK) >> FEATURE_EQ_SUPPORTED_SHIFT)
#define FEATURE_EQ_SUPPORTED_MASK					(0x00040000)
#define FEATURE_EQ_SUPPORTED_SHIFT					(18)

// Remote Device supports BB Fastconnect
#define FEATURE_FASTCONNECT_ACL_SUPPORTED_GET(x)		(((x) & FEATURE_FASTCONNECT_ACL_SUPPORTED_MASK) >> FEATURE_FASTCONNECT_ACL_SUPPORTED_SHIFT)
#define FEATURE_FASTCONNECT_ACL_SUPPORTED_MASK			(0x00080000)
#define FEATURE_FASTCONNECT_ACL_SUPPORTED_SHIFT			(19)

// Remote Device supports Sensor Data
#define FEATURE_SENSOR_DATA_SUPPORTED_GET(x)            (((x) & FEATURE_SENSOR_DATA_SUPPORTED_MASK) >> FEATURE_SENSOR_DATA_SUPPORTED_SHIFT)
#define FEATURE_SENSOR_DATA_SUPPORTED_MASK              (0x00100000)
#define FEATURE_SENSOR_DATA_SUPPORTED_SHIFT             (20)

// Remote Device supports Profile FastConnect
#define FEATURE_FASTCONNECT_SUPPORTED_GET(x)			(((x) & FEATURE_FASTCONNECT_SUPPORTED_MASK) >> FEATURE_FASTCONNECT_SUPPORTED_SHIFT)
#define FEATURE_FASTCONNECT_SUPPORTED_MASK				(0x00200000)
#define FEATURE_FASTCONNECT_SUPPORTED_SHIFT				(21)

// Remote Device supports DOAP
#define FEATURE_DOAP_SUPPORTED_GET(x)					(((x) & FEATURE_DOAP_SUPPORTED_MASK) >> FEATURE_DOAP_SUPPORTED_SHIFT)
#define FEATURE_DOAP_SUPPORTED_MASK						(0x00400000)
#define FEATURE_DOAP_SUPPORTED_SHIFT         			(22)

// Remote Device supports CATT
#define FEATURE_CATT_SUPPORTED_GET(x)                    (((x) & FEATURE_CATT_SUPPORTED_MASK) >> FEATURE_CATT_SUPPORTED_SHIFT)
#define FEATURE_CATT_SUPPORTED_MASK                      (0x00800000)
#define FEATURE_CATT_SUPPORTED_SHIFT                     (23)

// Remote Device supports Switch Control
#define FEATURE_SWITCH_CONTROL_SUPPORTED_GET(x)          (((x) & FEATURE_SWITCH_CONTROL_SUPPORTED_MASK) >> FEATURE_SWITCH_CONTROL_SUPPORTED_SHIFT)
#define FEATURE_SWITCH_CONTROL_SUPPORTED_MASK            (0x01000000)
#define FEATURE_SWITCH_CONTROL_SUPPORTED_SHIFT           (24)

// Remote Device supports Live Listen
#define FEATURE_LIVE_LISTEN_SUPPORTED_GET(x)             (((x) & FEATURE_LIVE_LISTEN_SUPPORTED_MASK) >> FEATURE_LIVE_LISTEN_SUPPORTED_SHIFT)
#define FEATURE_LIVE_LISTEN_SUPPORTED_MASK               (0x02000000)
#define FEATURE_LIVE_LISTEN_SUPPORTED_SHIFT              (25)

// Remote Device oftware Volume
#define FEATURE_SOFTWARE_VOLUME_SUPPORTED_GET(x)             (((x) & FEATURE_SOFTWARE_VOLUME_SUPPORTED_MASK) >> FEATURE_SOFTWARE_VOLUME_SUPPORTED_SHIFT)
#define FEATURE_SOFTWARE_VOLUME_SUPPORTED_MASK               (0x04000000)
#define FEATURE_SOFTWARE_VOLUME_SUPPORTED_SHIFT              (26)

// Remote Device Wireless Splitter
#define FEATURE_WIRELESS_SPLITTER_SUPPORTED_GET(x)             (((x) & FEATURE_WIRELESS_SPLITTER_SUPPORTED_MASK) >> FEATURE_WIRELESS_SPLITTER_SUPPORTED_SHIFT)
#define FEATURE_WIRELESS_SPLITTER_SUPPORTED_MASK               (0x08000000)
#define FEATURE_WIRELESS_SPLITTER_SUPPORTED_SHIFT              (27)

#if !RC_HIDE_B298
// Remote Device supports Single Click
#define FEATURE_SINGLE_CLICK_SUPPORTED_GET(x)             (((x) & FEATURE_SINGLE_CLICK_SUPPORTED_MASK) >> FEATURE_SINGLE_CLICK_SUPPORTED_SHIFT)
#define FEATURE_SINGLE_CLICK_SUPPORTED_MASK               (0x10000000)
#define FEATURE_SINGLE_CLICK_SUPPORTED_SHIFT              (28)

// Remote Device supports Double Click
#define FEATURE_DOUBLE_CLICK_SUPPORTED_GET(x)             (((x) & FEATURE_DOUBLE_CLICK_SUPPORTED_MASK) >> FEATURE_DOUBLE_CLICK_SUPPORTED_SHIFT)
#define FEATURE_DOUBLE_CLICK_SUPPORTED_MASK               (0x20000000)
#define FEATURE_DOUBLE_CLICK_SUPPORTED_SHIFT              (29)

// Remote Device supports Click & Hold
#define FEATURE_CLICK_HOLD_SUPPORTED_GET(x)             (((x) & FEATURE_CLICK_HOLD_SUPPORTED_MASK) >> FEATURE_CLICK_HOLD_SUPPORTED_SHIFT)
#define FEATURE_CLICK_HOLD_SUPPORTED_MASK               (0x40000000)
#define FEATURE_CLICK_HOLD_SUPPORTED_SHIFT              (30)
#endif


#define FEATURE_SUPPORTED_DEFAULT  (FEATURE_APPLE_ATCMD_MASK | FEATURE_AVRCP_ABSVOL_MASK | FEATURE_HF_ABSVOL_MASK | FEATURE_AVDTP_SILENCE_FILL_MASK | FEATURE_A2DP_SCHEDULING_MASK | FEATURE_A2DP_DYNAMIC_LATENCY_MASK | FEATURE_CATT_SUPPORTED_MASK | FEATURE_FASTCONNECT_SUPPORTED_MASK)

#define FEATURE_VERSION_DEFAULT    (1)

#endif // FEATURES_H_
